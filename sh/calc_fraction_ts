#!/bin/bash
hourlyvarkey=$1
dailyvarkey=$2
fractionvarkey=$3
raster_sql_file=$4
db_host=$5
db_name=$6
start_date=-1
end_date=-1
if [ $# -gt 6 ]; then
  start_date=$7
fi
if [ $# -gt 7 ]; then
  end_date=$8
fi
if [ $start_date == "-1" ]; then
  start_epoch='-1'
else
  start_epoch=$(date -d $start_date +%s)
fi
if [ $end_date == "-1" ]; then
 end_epoch='-1' # Or leave it undefined
else
  end_epoch=$(date -d $end_date +%s)
fi

rastersql="
\\set hourlyvarkey '$hourlyvarkey' \n
\\set dailyvarkey '$dailyvarkey' \n
\\set fractionvarkey '$fractionvarkey' \n
\\set start_epoch $start_epoch \n
\\set end_epoch $end_epoch \n

insert into dh_timeseries_weather ( tstime,tsendtime, featureid, entity_type, rast, bbox, varid) \n
with frac_daily as ( \n
 select hourly.tstime,hourly.tsendtime, hourly.featureid, hourly.entity_type, \n
 st_mapalgebra( hourly.rast, 1, St_Reclass(daily.rast, 1, '[0-0]:1-1, [0.0000001-99999]:0.0000001-99999', '64BF',9999), 1, '[rast1]/ [rast2]' ) as rast, \n 
 hourly.bbox, fraction.hydroid as varid \n
 from dh_timeseries_weather as hourly \n
 left outer join dh_variabledefinition as fraction \n
 on( \n
 fraction.varkey = :'fractionvarkey' \n
 ) \n
Left outer join dh_timeseries_weather as daily \n
 on( \n
 extract(day from to_timestamp(hourly.tsendtime) at time zone 'UTC') = extract(day from to_timestamp(daily.tsendtime) at time zone 'UTC') \n
 and extract(year from to_timestamp(hourly.tsendtime) at time zone 'UTC') = extract(year from to_timestamp(daily.tsendtime) at time zone 'UTC') \n
 and extract(month from to_timestamp(hourly.tsendtime) at time zone 'UTC') = extract(month from to_timestamp(daily.tsendtime) at time zone 'UTC') \n
 ) \n
 left outer join dh_variabledefinition as hourly_variable \n
 on( \n
 hourly.varid = hourly_variable.hydroid \n
 ) \n
 left outer join dh_variabledefinition as daily_variable \n
 on( \n
 daily.varid = daily_variable.hydroid \n
 ) \n
 where hourly_variable.varkey= :'hourlyvarkey' \n
 AND daily_variable.varkey= :'dailyvarkey' \n
 AND fraction.hydroid is not null \n
 and ( (hourly.tsendtime >=:start_epoch) or (:start_epoch = -1) ) \n
 and ( (hourly.tsendtime <:end_epoch) or (:end_epoch = -1) ) \n
 and ( (daily.tsendtime >=:start_epoch) or (:start_epoch = -1) ) \n
 and ( (daily.tsendtime <:end_epoch) or (:end_epoch = -1) ))\n
 select frac.* from frac_daily as frac \n
 left outer join dh_timeseries_weather as dupe \n
  on ( \n
  frac.tstime = dupe.tstime \n
  and frac.tsendtime = dupe.tsendtime \n
  and frac.bbox = dupe.bbox \n
  and frac.varid = dupe.varid) \n
  where dupe.tid is null;" \n

# turn off the expansion of the asterisk
set -f
echo -e $rastersql > $raster_sql_file 
cat $raster_sql_file | psql -h $db_host $db_name
