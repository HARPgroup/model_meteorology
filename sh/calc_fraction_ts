#!/bin/bash
hourlyvarkey=$1
dailyvarkey=$2
fractionvarkey=$3
raster_sql_file=$4
db_host=$5
db_name=$6
end_datetime="$7 $8 $9"

rastersql="
\\set hourlyvarkey '$hourlyvarkey' \n
\\set dailyvarkey '$dailyvarkey' \n
\\set fractionvarkey '$fractionvarkey' \n
\\set end_datetime '$end_datetime' \n

CREATE temp table ts_rast_tile as (  \n
with daily_union as ( \n
 SELECT min(daily.tstime) as tstime, \n
	max(daily.tsendtime) as tsendtime,  \n
	ST_UNION(daily.rast,'sum') as rast,  \n
	daily_variable.hydroid as varid \n
 FROM dh_timeseries_weather as daily  \n
 LEFT JOIN dh_variabledefinition as daily_variable  \n
 on (daily.varid = daily_variable.hydroid)  \n
 WHERE daily_variable.varkey= :'dailyvarkey'  \n
	AND ( daily.tsendtime > extract(epoch from :'end_datetime'::timestamptz) - 86400)  \n
    AND ( daily.tsendtime <= extract(epoch from :'end_datetime'::timestamptz))   \n
 GROUP BY daily_variable.hydroid, extract(day from to_timestamp(daily.tstime - 43200) at time zone 'UTC') \n
), \n
frac_daily as (  \n
 SELECT hourly.tstime,hourly.tsendtime, \n
 hourly.featureid, hourly.entity_type, \n
 st_mapalgebra( hourly.rast, 1, St_Reclass(daily.rast, 1, '[0-0]:1-1, [0.0000001-99999]:0.0000001-99999', '64BF',9999), 1, '[rast1]/ [rast2]' ) as rast,  \n
 hourly.bbox,  \n
 fraction.hydroid as varid  \n
 FROM dh_timeseries_weather as hourly  \n
 LEFT JOIN dh_variabledefinition as fraction  \n
 ON (fraction.varkey = :'fractionvarkey')  \n
 LEFT JOIN daily_union as daily  \n
 ON (hourly.tsendtime > daily.tstime  \n
  and hourly.tsendtime <= daily.tsendtime)  \n
 LEFT JOIN dh_variabledefinition as hourly_variable  \n
 on (hourly.varid = hourly_variable.hydroid)  \n
 WHERE hourly_variable.varkey= :'hourlyvarkey'  \n
	AND ( hourly.tsendtime >  extract(epoch from :'end_datetime'::timestamptz) - 86400)  \n
	AND ( hourly.tsendtime <= extract(epoch from :'end_datetime'::timestamptz)) \n
),
frac_daily_tile as (
	select frac.tstime, frac.tsendtime, frac.featureid,
	frac.entity_type,
	st_tile(frac.rast, 1, 16, 16) as rast,
	frac.bbox,
	frac.varid
	FROM frac_daily as frac
),
select finalFrac.tstime, finalFrac.tsendtime, finalFrac.featureid,  \n
	finalFrac.varid,  \n
	finalFrac.entity_type,  \n
	finalFrac.rast,  \n
	ST_ConvexHull(finalFrac.rast) as bbox  \n
FROM frac_daily_tile as finalFrac  \n
);  \n

CREATE INDEX trast_ix ON ts_rast_tile USING GIST(bbox);  \n

INSERT INTO dh_timeseries_weather ( tstime,tsendtime, featureid, entity_type, rast, bbox, varid)  \n
SELECT frac.tstime,frac.tsendtime,frac.featureid,frac.entity_type,
frac.rast,frac.bbox,
frac.varid
FROM ts_rast_tile as frac  \n
LEFT JOIN dh_timeseries_weather as dupe  \n
on (  \n
  frac.tstime = dupe.tstime  \n
  and frac.tsendtime = dupe.tsendtime  \n
  and frac.bbox = dupe.bbox  \n
  and frac.varid = dupe.varid)  \n
WHERE dupe.tid IS null;"
INSERT INTO dh_timeseries_weather ( tstime,tsendtime, featureid, entity_type, rast, bbox, varid)  \n
SELECT frac.* FROM frac_daily as frac  \n
LEFT JOIN dh_timeseries_weather as dupe  \n
on (  \n
  frac.tstime = dupe.tstime  \n
  and frac.tsendtime = dupe.tsendtime  \n
  and frac.bbox = dupe.bbox  \n
  and frac.varid = dupe.varid)  \n
WHERE dupe.tid IS null;"

# turn off the expansion of the asterisk
set -f
echo -e $rastersql > $raster_sql_file 
cat $raster_sql_file | psql -h $db_host $db_name