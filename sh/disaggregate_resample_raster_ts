#!/bin/bash
hydrocode=$1
varkey=$2
disaggregate_varkey=$3
daily_varkey=$4
resample_varkey=$5
raster_sql_file=$6
raster_sum_file=$7
db_host=$8
db_name=$9
bundle=${10}
ftype=${11}
end_wdm=${12}
start_epoch=-1
end_epoch=-1
if [ $# -gt 12 ]; then
  start_epoch=${13}
fi
if [ $# -gt 13 ]; then
  end_epoch=${14}
fi
echo "called DISAGGREGATE_RASTER_TS $hydrocode $varkey $disaggregate_varkey $daily_varkey $resample_varkey $raster_sql_file $raster_sum_file $db_host $db_name $bundle $ftype $start_epoch $end_epoch"
echo "Checking bundle as ${bundle} and type as ${ftype}"
#SQL query operates through a series of WITH statements:
#usgs_features = Selecting the 1 feature from dh_feature_fielded to get hydroid and geometry
#metUnion = Union of all raw precip raster tiles from dh_timeseries_weather from PRISM, daymet, NLDAS2, etc. Will be a daily. Clipped to a buffer around usgs_feature
#fracClipped = Hourly fractions that show NLDAS2 rainfall distribution clipped to a buffer around usgs_feature
#fracClippedWbbox = Simply calculated the bounding box of the clipped fractional rasters in fracClipped and adds it to fracClipped
#tempDisagg = Resamples metUnion and fracClippedWbbox to the resample_varkey resolution and multiplies them by each other to disaggregate the daily data by the hourly fractions
raster_sql="
\\set band '1' \n
\\set hydrocode '$hydrocode' \n
\\set varkey '$varkey' \n
\\set disag_varkey '$disaggregate_varkey' \n
\\set daily_varkey '$daily_varkey' \n
\\set resample_varkey '$resample_varkey' \n
\\set bundle '${bundle}' \n
\\set ftype '${ftype}' \n
\\set start_epoch $start_epoch \n 
\\set end_epoch $end_epoch \n
\\set end_wdm $end_wdm \n
\\set fname '${raster_sum_file}' \n
select hydroid as covid from dh_feature where hydrocode = 'cbp6_met_coverage' \\gset \n
	
\\\timing ON \n
	
copy (  \n
WITH usgs_features AS (  \n
	SELECT *  \n
	FROM dh_feature_fielded  \n
	WHERE hydrocode = :'hydrocode'  \n
		AND bundle = :'bundle'  \n
		AND ftype = :'ftype'  \n
)  \n
,metUnion AS (  \n
	SELECT met.featureid,  \n
	met.tstime, met.tsendtime,  \n
	st_clip(  \n
		st_union(met.rast),  \n
		st_buffer(st_convexhull(f.dh_geofield_geom),0.25)  \n
	) as rast  \n
	FROM usgs_features as f  \n
	JOIN(  \n
		SELECT *  \n
		FROM dh_timeseries_weather as met  \n
		LEFT JOIN dh_variabledefinition as b  \n
		ON (met.varid = b.hydroid)  \n
		WHERE b.varkey=:'varkey'  \n
			AND ( (met.tsendtime >= :start_epoch) OR (:start_epoch = -1) )  \n
			AND ( (met.tsendtime <= :end_epoch) OR (:end_epoch = -1) )  \n
			AND met.featureid = :covid  \n
	) AS met  \n
	ON f.dh_geofield_geom && met.bbox  \n
	GROUP BY met.featureid, met.tsendtime, met.tstime, f.dh_geofield_geom  \n
)   \n
,fracClipped as (  \n
	SELECT frac.tstime, frac.tsendtime,  \n
	st_clip(  \n
		frac.rast,  \n
		st_buffer(st_convexhull(f.dh_geofield_geom),0.25)  \n
	) as rast  \n
	FROM usgs_features as f  \n
	JOIN dh_timeseries_weather as frac   \n
	ON (  \n
		f.dh_geofield_geom && frac.bbox  \n
	)  \n
	LEFT JOIN dh_variabledefinition as vf  \n
	ON (frac.varid = vf.hydroid)  \n
	WHERE vf.varkey = :'disag_varkey'  \n
		AND ( (frac.tstime >= :start_epoch) OR (:start_epoch = -1) )  \n
		AND ( (frac.tsendtime <= :end_epoch) OR (:end_epoch = -1) )  \n
)  \n
,fracClippedWbbox as (  \n
	SELECT *,  \n
	st_convexhull(rast) as bbox  \n
	FROM fracClipped  \n
)  \n
,tempDisagg as (  \n
	SELECT met.featureid, \n
	frac.tstime, frac.tsendtime, \n
	ST_MapAlgebra( \n
		st_clip(  \n
			st_resample(met.rast,rt.rast), \n
			ST_ConvexHull(f.dh_geofield_geom)  \n
		), 1, \n
		st_clip( \n
			st_resample(frac.rast,rt.rast), \n
			ST_ConvexHull(f.dh_geofield_geom) \n
		), 1, \n
		'[rast1] * [rast2]' \n
	) as rast \n
	FROM usgs_features as f \n
	JOIN fracClippedWbbox as frac  \n
	ON ( \n
		f.dh_geofield_geom && frac.bbox \n
	) \n
	LEFT JOIN metUnion as met \n
	ON ( \n
		frac.tstime >= met.tstime \n
		AND frac.tsendtime <= met.tsendtime \n
	) \n
	LEFT JOIN (SELECT rast FROM raster_templates WHERE varkey = :'resample_varkey') as rt   \n
	ON 1 = 1   \n
) ,met as (  \n
	Select :'hydrocode' as hydrocode,  \n
	met.featureid, to_timestamp(met.tsendtime) as obs_date,  \n
	extract(year from to_timestamp(met.tsendtime)) as yr,  \n
	extract(month from to_timestamp(met.tsendtime)) as mo,  \n
	extract(day from to_timestamp(met.tsendtime)) as da,  \n
	extract(hour from to_timestamp(met.tsendtime)) as hr,  \n
	met.tstime,met.tsendtime,  \n
	(ST_summarystats(met.rast, :'band', TRUE)).mean as stats  \n
	FROM tempDisagg as met  \n
)  \n
SELECT * FROM (  \n
	SELECT hydrocode,  \n
	featureid, obs_date,  \n
	tstime,tsendtime,  \n
	yr, mo, da, hr,  \n
	0.0393701 * stats precip_in  \n
	FROM met  \n
	WHERE tsendtime <= :end_wdm \n
) as metResults  \n
ORDER BY metResults.tsendtime  \n
) to :'fname' WITH HEADER CSV;"
# turn off the expansion of the asterisk
set -f
echo -e $raster_sql > $raster_sql_file 
#cat $raster_sql_file | psql -h $db_host $db_name

