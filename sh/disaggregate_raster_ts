#!/bin/bash
hydrocode=$1
varkey=$2
disaggregate_varkey=$3
raster_sql_file=$4
raster_sum_file=$5
db_host=$6
db_name=$7
bundle=$8
ftype=${9}
dissag_tz_offset=${10}
start_epoch=-1
end_epoch=-1
if [ $# -gt 10 ]; then
  start_epoch=${11}
fi
if [ $# -gt 11 ]; then
  end_epoch=${12}
fi
echo "called DISAGGREGATE_RASTER_TS $hydrocode $varkey $disaggregate_varkey $raster_sql_file $raster_sum_file $db_host $db_name $bundle $ftype $start_epoch $end_epoch"
echo "Checking bundle as ${bundle} and type as ${ftype}"
raster_sql="
\\set band '1' \n
\\set hydrocode '$hydrocode' \n
\\set varkey '$varkey' \n
\\set disag_varkey '$disaggregate_varkey' \n
\\set bundle '${bundle}' \n
\\set ftype '${ftype}' \n
\\set start_epoch $start_epoch \n 
\\set end_epoch $end_epoch \n
\\set dissag_tz_offset $dissag_tz_offset \n
\\set fname '${raster_sum_file}' \n
select hydroid as covid from dh_feature where hydrocode = 'cbp6_met_coverage' \\gset \n
	
\\\timing ON \n

CREATE temp table ts_rast_tile as (  \n
with daily_union as ( \n
 SELECT min(daily.tstime) as tstime, \n
        max(daily.tsendtime) as tsendtime,  \n
        ST_UNION(daily.rast,'sum') as rast,  \n
        daily_variable.hydroid as varid \n
 FROM dh_timeseries_weather as daily  \n
 LEFT JOIN dh_variabledefinition as daily_variable  \n
 on (daily.varid = daily_variable.hydroid)  \n
 WHERE daily_variable.varkey= :'varkey'  \n
        AND ( daily.tsendtime > extract(epoch from :'end_datetime'::timestamptz) - 86400)  \n
    AND ( daily.tsendtime <= extract(epoch from :'end_datetime'::timestamptz))   \n
 GROUP BY daily_variable.hydroid, extract(day from to_timestamp(daily.tstime - 43200) at time zone 'UTC') \n
), \n
frac_daily as (  \n
 SELECT hourly.tstime,hourly.tsendtime, \n
 hourly.featureid, hourly.entity_type, \n
 st_mapalgebra( hourly.rast, 1, St_Reclass(daily.rast, 1, '[0-0]:1-1, [0.0000001-99999]:0.0000001-99999', '64BF',9999), 1, '[rast1]/ [rast2]' ) as rast,  \n
 hourly.bbox,  \n
 fraction.hydroid as varid  \n
 FROM dh_timeseries_weather as hourly  \n
 LEFT JOIN dh_variabledefinition as fraction  \n
 ON (fraction.varkey = :'fractionvarkey')  \n
 LEFT JOIN daily_union as daily  \n
 ON (hourly.tsendtime > daily.tstime  \n
  and hourly.tsendtime <= daily.tsendtime)  \n
 LEFT JOIN dh_variabledefinition as hourly_variable  \n
 on (hourly.varid = hourly_variable.hydroid)  \n
 WHERE hourly_variable.varkey= :'hourlyvarkey'  \n
        AND ( hourly.tsendtime >  extract(epoch from :'end_datetime'::timestamptz) - 86400)  \n
        AND ( hourly.tsendtime <= extract(epoch from :'end_datetime'::timestamptz)) \n
),
frac_daily_tile as (
        select frac.tstime, frac.tsendtime, frac.featureid,
        frac.entity_type,
        st_tile(frac.rast, 1, 16, 16) as rast,
        frac.bbox,
        frac.varid
        FROM frac_daily as frac
),
select finalFrac.tstime, finalFrac.tsendtime, finalFrac.featureid,  \n
        finalFrac.varid,  \n
        finalFrac.entity_type,  \n
        finalFrac.rast,  \n
        ST_ConvexHull(finalFrac.rast) as bbox  \n
FROM frac_daily_tile as finalFrac  \n
);  \n

CREATE INDEX trast_ix ON ts_rast_tile USING GIST(bbox);  \n


CREATE TEMP TABLE tmp_metUnion as (  \n
 WITH usgs_features AS (  \n
   SELECT *  \n
   FROM dh_feature_fielded  \n
   WHERE hydrocode = :'hydrocode'  \n
   AND bundle = :'bundle'  \n
   AND ftype = :'ftype'  \n
 )  \n
 ,metUnion AS (  \n
   SELECT met.featureid,  \n
   met.tstime, met.tsendtime,  \n
   st_clip(  \n
     st_union(met.rast),  \n
     st_buffer(st_convexhull(f.dh_geofield_geom),0.125)  \n
   ) as rast  \n
   FROM usgs_features as f  \n
   JOIN(  \n
     SELECT *  \n
     FROM dh_variabledefinition as b  \n
     LEFT JOIN ts_rast_tile as met  \n
     ON (met.varid = b.hydroid)  \n
     WHERE b.varkey=:'varkey'  \n
		AND ( (met.tsendtime >= :start_epoch) OR (:start_epoch = -1) )    \n
		AND ( (met.tsendtime <= (:end_epoch + :dissag_tz_offset)) OR (:end_epoch = -1) )    \n
       AND met.featureid = :covid  \n
   ) AS met  \n
   ON f.dh_geofield_geom && met.bbox  \n
   GROUP BY met.featureid, met.tsendtime, met.tstime, f.dh_geofield_geom  \n
 )  \n
 	SELECT * FROM metUnion  \n
);  \n

CREATE TEMP TABLE tmp_metDisagg as (  \n
 WITH usgs_features AS (  \n
   SELECT *  \n
   FROM dh_feature_fielded  \n
   WHERE hydrocode = :'hydrocode'  \n
   AND bundle = :'bundle'  \n
   AND ftype = :'ftype'  \n
 )  \n
 ,metDisagg AS (  \n
   SELECT fracmet.featureid,  \n
   fracmet.tstime, fracmet.tsendtime,  \n
   st_clip(  \n
     st_union(fracmet.rast),  \n
     st_buffer(st_convexhull(f.dh_geofield_geom),0.125)  \n
   ) as rast  \n
   FROM usgs_features as f  \n
   LEFT OUTER JOIN(  \n
     SELECT *  \n
     FROM dh_variabledefinition as b  \n
     LEFT JOIN ts_rast_tile as fracmet  \n
       ON (fracmet.varid = b.hydroid)  \n
       WHERE b.varkey=:'disag_varkey'  \n
       AND ( (fracmet.tsendtime >= :start_epoch) OR (:start_epoch = -1) )  \n
       AND ( (fracmet.tsendtime <= :end_epoch) OR (:end_epoch = -1) )  \n
       AND fracmet.featureid = :covid  \n
   ) AS fracmet  \n
   ON f.dh_geofield_geom && fracmet.bbox  \n
   GROUP BY fracmet.featureid, fracmet.tsendtime, fracmet.tstime, f.dh_geofield_geom  \n
 )  \n
 	SELECT * FROM metDisagg  \n
);  \n

copy (  \n
	WITH tempDisagg as (  \n
		SELECT met.featureid,  \n
		frac.tstime, frac.tsendtime,  \n
		ST_MapAlgebra(  \n
			st_clip(  
				met.rast,  
				ST_ConvexHull(f.dh_geofield_geom)  
			), 1, \n
			st_clip(  \n
				st_resample(frac.rast,met.rast),  \n
				ST_ConvexHull(f.dh_geofield_geom)  \n
			), 1,  \n
			'[rast1] * [rast2]'  \n
		) as rast  \n
		FROM usgs_features as f   \n
		LEFT JOIN tmp_metUnion as met   \n
		ON ( 1 = 1 )   \n
    LEFT JOIN tmp_metDisagg as frac  \n
    ON (  \n
     frac.tsendtime >= met.tstime \n
     AND frac.tsendtime <= met.tsendtime \n
    )  \n
	)
	,met as (  \n
		Select :'hydrocode' as hydrocode,  \n
		met.featureid, to_timestamp(met.tsendtime) as obs_date,  \n
		extract(year from to_timestamp(met.tsendtime)) as yr,  \n
		extract(month from to_timestamp(met.tsendtime)) as mo,  \n
		extract(day from to_timestamp(met.tsendtime)) as da,  \n
		extract(hour from to_timestamp(met.tsendtime)) as hr,  \n
		met.tstime,met.tsendtime,  \n
		(ST_summarystats(met.rast, :'band', TRUE)).mean as stats  \n
		FROM tempDisagg as met  \n
	)  \n
	SELECT * FROM (  \n
		SELECT hydrocode,  \n
		featureid, obs_date,  \n
		tstime,tsendtime,  \n
		yr, mo, da, hr,  \n
		0.0393701 * stats precip_in  \n
		FROM met  \n
		WHERE tsendtime <= :end_epoch \n
	) as metResults  \n
	ORDER BY metResults.tsendtime  \n
) to :'fname' WITH HEADER CSV;"
# turn off the expansion of the asterisk
set -f
echo -e $raster_sql > $raster_sql_file 
cat $raster_sql_file | psql -h $db_host $db_name

